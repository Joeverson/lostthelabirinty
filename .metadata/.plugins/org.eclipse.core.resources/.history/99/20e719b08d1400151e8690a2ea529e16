package controllers;

import java.io.ObjectInputStream.GetField;

import models.Warrior;
import models.wall;

public class Move extends GenerateLabirinty{

	public Move() {
		// TODO Auto-generated constructor stub
	}
	
	//chamada de acçoes de passos
		public static void steps(String steps, Warrior w){
			switch(steps){
				case "left":
					goLeft(w);
					break;
				case "right":
					goRight();
					break;
				case "top":
					goTop();
					break;
				case "bottom":
					goBottom();
					break;
				default:
					System.out.println("Comando invalido! \n\n");				
			}
		}


		// funções de navegação

		
		
		//left
		private static void goLeft(Warrior w){
	
			if(labirinties[(x-1)][y].getContaint() == null && !labirinties[(x-1)][y].isBorder()){
				labirinties[x-1][y].setContaint(w);

				//deixa nulo a posição anterior do guerreiro
				labirinties[x][y].setContaint(null);

				// decrementando a posição x do guerreiro
				x--;

				System.out.println("guerreiro esta no x = "+x);
				System.out.println("guerreiro esta no y = "+y);

			}else{
				if(labirinties[(x-1)][y].isBorderLeft() && labirinties[(x-1)][y].isBorderTop()){
					System.out.println("aqui é a borda lateral Superior esquerda!");
				}else if(labirinties[(x-1)][y].isBorderLeft() && labirinties[(x-1)][y].isBorderBottom()){
					System.out.println("aqui é a borda lateral inferior esquerda!");
				}else if(labirinties[(x-1)][y].isBorderLeft()){
					System.out.println("aqui é a borda lateral esquerda!");
				}else{
					System.out.println(( ( wall ) labirinties[x-1][y].getContaint() ).msg());
				}
			}
		}

		//right
		private static void goRight(){
			Warrior w = (Warrior) labirinties[x][y].getContaint();
			
			if(labirinties[(x+1)][y].getContaint() == null){
				labirinties[x+1][y].setContaint(w);

				//deixa nulo a posição anterior do guerreiro
				labirinties[x][y].setContaint(null);

				//imcrementando a posição x do guerreiro
				x++;

				System.out.println("guerreiro esta no x = "+x);
				System.out.println("guerreiro esta no y = "+y);

			}else{
				if(labirinties[x+1][y].isBorderRight() && labirinties[x+1][y].isBorderTop()){
					System.out.println("aqui é a borda lateral Superior direito!");
				}else if(labirinties[x+1][y].isBorderRight() && labirinties[x+1][y].isBorderBottom()){
					System.out.println("aqui é a borda lateral inferior direito!");
				}else if(labirinties[x+1][y].isBorderRight()){
					System.out.println("aqui é a borda lateral direito!");
				}else{
					System.out.println(( ( wall ) labirinties[x+1][y].getContaint() ).msg());
				}
			}
		}

		//top
		private static void goTop(){
			Warrior w = (Warrior) labirinties[x][y].getContaint();

			if(labirinties[(x)][y-1].getContaint() == null){
				labirinties[x][y-1].setContaint(w);

				//deixa nulo a posição anterior do guerreiro
				labirinties[x][y].setContaint(null);
				
				// decrementando o valor da posição y
				y--;

				System.out.println("guerreiro esta no x = "+x);
				System.out.println("guerreiro esta no y = "+y);

			}else{
				if(labirinties[x][y-1].isBorderRight() && labirinties[x][y-1].isBorderTop()){
					System.out.println("aqui é a borda lateral Superior direito!");
				}else if(labirinties[x][y-1].isBorderTop() && labirinties[x][y-1].isBorderLeft()){
					System.out.println("aqui é a borda lateral Superior Esquerdo!");
				}else if(labirinties[x][y-1].isBorderTop()){
					System.out.println("aqui é a borda lateral Superior!");
				}else{
					System.out.println(( ( wall ) labirinties[x][y-1].getContaint() ).msg());
				}
			}
		}


		//bottom
		private static void goBottom(){
			Warrior w = (Warrior) labirinties[x][y].getContaint();
			
			if(labirinties[(x)][y+1].getContaint() == null){
				labirinties[x][y+1].setContaint(w);

				//deixa nulo a posição anterior do guerreiro
				labirinties[x][y].setContaint(null);

				//incrementando o valor da posição y
				y++;

				System.out.println("guerreiro esta no x = "+x);
				System.out.println("guerreiro esta no y = "+y);

			}else{
				if(labirinties[x][y+1].isBorderRight() && labirinties[x][y+1].isBorderBottom()){
					System.out.println("aqui é a borda lateral Inferior direito!");
				}else if(labirinties[x][y+1].isBorderBottom() && labirinties[x][y+1].isBorderLeft()){
					System.out.println("aqui é a borda lateral Inferior Esquerdo!");
				}else if(labirinties[x][y+1].isBorderBottom()){
					System.out.println("aqui é a borda Inferior!");
				}else{
					System.out.println(( ( wall ) labirinties[x][y+1].getContaint() ).msg());
				}
			}
		}

}
